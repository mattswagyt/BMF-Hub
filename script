-- BMF Hub (Clean, Perfectly Sized)

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Clean up old UI
for _,v in ipairs(PlayerGui:GetChildren()) do
    if v.Name == "BMF_Hub_GUI" then v:Destroy() end
end

-- Colors
local ACCENT = Color3.fromRGB(200, 20, 20)
local DARK = Color3.fromRGB(18,18,20)
local DARKER = Color3.fromRGB(12,12,14)
local TEXT = Color3.fromRGB(240,240,240)

-- Helpers
local function makeUICorner(inst, radius)
    local c = Instance.new("UICorner")
    c.CornerRadius = UDim.new(0, radius or 8)
    c.Parent = inst
end

local function makeShadow(parent)
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, 20, 1, 20)
    shadow.Position = UDim2.new(0, -10, 0, -10)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://6014261993"
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10,10,118,118)
    shadow.ImageColor3 = Color3.new(0,0,0)
    shadow.ImageTransparency = 0.75
    shadow.Parent = parent
end

-- GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BMF_Hub_GUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

-- Main Frame
local main = Instance.new("Frame")
main.Name = "Main"
main.Size = UDim2.new(0, 720, 0, 420)
main.Position = UDim2.new(0.5, -360, 0.5, -210)
main.AnchorPoint = Vector2.new(0.5,0.5)
main.BackgroundColor3 = DARK
makeUICorner(main, 14)
main.Parent = screenGui
makeShadow(main)

-- Draggable
local dragging, dragStart, startPos = false, nil, nil
main.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = main.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)
main.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Header
local header = Instance.new("Frame")
header.Size = UDim2.new(1, 0, 0, 56)
header.BackgroundColor3 = DARKER
header.Parent = main
makeUICorner(header, 14)

local title = Instance.new("TextLabel")
title.Size = UDim2.new(0.6, -16, 1, 0)
title.Position = UDim2.new(0, 12, 0, 0)
title.BackgroundTransparency = 1
title.Text = "BMF Hub"
title.TextColor3 = ACCENT
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = header

local errorLog = Instance.new("TextLabel")
errorLog.Size = UDim2.new(0.55, -20, 0, 18)
errorLog.Position = UDim2.new(0, 12, 1, -22)
errorLog.BackgroundTransparency = 1
errorLog.Text = "Status: OK"
errorLog.TextColor3 = Color3.fromRGB(230,120,120)
errorLog.Font = Enum.Font.Gotham
errorLog.TextSize = 14
errorLog.TextXAlignment = Enum.TextXAlignment.Left
errorLog.Parent = header

local keyHint = Instance.new("TextLabel")
keyHint.Size = UDim2.new(0, 160, 1, 0)
keyHint.Position = UDim2.new(1, -166, 0, 0)
keyHint.BackgroundTransparency = 1
keyHint.Text = "Toggle: Insert"
keyHint.TextColor3 = TEXT
keyHint.Font = Enum.Font.Gotham
keyHint.TextSize = 14
keyHint.TextXAlignment = Enum.TextXAlignment.Right
keyHint.Parent = header

-- Sidebar (Left Tabs)
local sidebar = Instance.new("Frame")
sidebar.Size = UDim2.new(0, 150, 1, -56)
sidebar.Position = UDim2.new(0, 0, 0, 56)
sidebar.BackgroundColor3 = Color3.fromRGB(22,16,16)
sidebar.Parent = main
makeUICorner(sidebar, 12)

local leftTabs = {"Main","Local Player","Server","Other Scripts","Join our Discord!"}
local leftTabButtons = {}
local activeLeft = "Main"

local sidebarLayout = Instance.new("UIListLayout")
sidebarLayout.Parent = sidebar
sidebarLayout.Padding = UDim.new(0,8)
sidebarLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

-- Top Tabs
local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1,-150,0,62)
topBar.Position = UDim2.new(0,150,0,56)
topBar.BackgroundTransparency = 1
topBar.Parent = main

local leftArrow = Instance.new("TextButton")
leftArrow.Size = UDim2.new(0,30,0,30)
leftArrow.Position = UDim2.new(0,-6,0,16)
leftArrow.BackgroundColor3 = DARKER
leftArrow.Text = "<"
leftArrow.TextColor3 = TEXT
makeUICorner(leftArrow,8)
leftArrow.Parent = topBar

local rightArrow = Instance.new("TextButton")
rightArrow.Size = UDim2.new(0,30,0,30)
rightArrow.Position = UDim2.new(1,-24,0,16)
rightArrow.BackgroundColor3 = DARKER
rightArrow.Text = ">"
rightArrow.TextColor3 = TEXT
makeUICorner(rightArrow,8)
rightArrow.Parent = topBar

local topScroll = Instance.new("ScrollingFrame")
topScroll.Size = UDim2.new(1,-60,1,0)
topScroll.Position = UDim2.new(0,36,0,0)
topScroll.ScrollBarThickness = 6
topScroll.BackgroundTransparency = 1
topScroll.Parent = topBar

local topList = Instance.new("UIListLayout")
topList.FillDirection = Enum.FillDirection.Horizontal
topList.Padding = UDim.new(0,8)
topList.Parent = topScroll

local topTabs = {"FPS","PVP","Grinding","Building","Stories","Horror","Roleplay","Simulators","FE Scripts","Trolling","Admin"}
local topTabButtons = {}
local activeTop = "FPS"

-- Content Scroll (single scrolling frame)
local mainScroll = Instance.new("ScrollingFrame")
mainScroll.Size = UDim2.new(1,-150,1, -118) -- fits below topBar and sidebar
mainScroll.Position = UDim2.new(0,150,0,118)
mainScroll.BackgroundColor3 = Color3.fromRGB(20,20,22)
mainScroll.ScrollBarThickness = 8
mainScroll.Parent = main
makeUICorner(mainScroll, 10)

local mainLayout = Instance.new("UIListLayout")
mainLayout.Padding = UDim.new(0,8)
mainLayout.Parent = mainScroll

-- Helper to update canvas
local function updateMainCanvas()
    RunService.Heartbeat:Wait()
    local total = 0
    for _,child in ipairs(mainScroll:GetChildren()) do
        if child:IsA("GuiObject") and child ~= mainLayout then
            total = total + child.AbsoluteSize.Y + 8
        end
    end
    mainScroll.CanvasSize = UDim2.new(0,0,0,math.max(total,mainScroll.AbsoluteWindowSize.Y))
end

-- WIP Button
local function makeWIPButton(text)
    local b = Instance.new("TextButton")
    b.Size = UDim2.new(1,-20,0,36)
    b.Position = UDim2.new(0,10,0,0)
    b.BackgroundColor3 = Color3.fromRGB(30,20,20)
    b.TextColor3 = TEXT
    b.Text = text or "WIP!"
    b.Font = Enum.Font.GothamSemibold
    b.TextSize = 16
    makeUICorner(b,8)
    b.Parent = mainScroll
    b.MouseButton1Click:Connect(function()
        print("WIP!")
        errorLog.Text = "Status: Executed '"..b.Text.."' (WIP)"
    end)
    updateMainCanvas()
end

-- Populate Left Tabs
for _,name in ipairs(leftTabs) do
    local t = Instance.new("TextButton")
    t.Size = UDim2.new(0.92,0,0,40)
    t.BackgroundColor3 = Color3.fromRGB(35,6,6)
    t.Text = name
    t.TextColor3 = TEXT
    t.Font = Enum.Font.GothamBold
    t.TextSize = 16
    makeUICorner(t,8)
    t.Parent = sidebar
    leftTabButtons[name] = t

    t.MouseButton1Click:Connect(function()
        activeLeft = name
        for n,btn in pairs(leftTabButtons) do
            btn.BackgroundColor3 = (n==activeLeft) and Color3.fromRGB(80,10,10) or Color3.fromRGB(35,6,6)
            btn.TextColor3 = (n==activeLeft) and ACCENT or TEXT
        end
        -- Clear content
        for _,child in ipairs(mainScroll:GetChildren()) do
            if child ~= mainLayout then child:Destroy() end
        end
        for i=1,10 do makeWIPButton("WIP!") end
        errorLog.Text = "Status: Selected Left Tab '"..name.."'"
    end)
end

leftTabButtons[activeLeft].BackgroundColor3 = Color3.fromRGB(80,10,10)
leftTabButtons[activeLeft].TextColor3 = ACCENT

-- Populate Top Tabs
for _,name in ipairs(topTabs) do
    local b = Instance.new("TextButton")
    b.Size = UDim2.new(0,110,1,0)
    b.BackgroundColor3 = Color3.fromRGB(35,8,8)
    b.Text = name
    b.TextColor3 = TEXT
    b.Font = Enum.Font.GothamSemibold
    b.TextSize = 14
    makeUICorner(b,8)
    b.Parent = topScroll
    topTabButtons[name] = b

    b.MouseButton1Click:Connect(function()
        activeTop = name
        for n,bt in pairs(topTabButtons) do
            bt.BackgroundColor3 = (n==activeTop) and Color3.fromRGB(80,10,10) or Color3.fromRGB(35,8,8)
            bt.TextColor3 = (n==activeTop) and ACCENT or TEXT
        end
        -- Clear content
        for _,child in ipairs(mainScroll:GetChildren()) do
            if child ~= mainLayout then child:Destroy() end
        end
        for i=1,12 do makeWIPButton("WIP!") end
        errorLog.Text = "Status: Selected Top Tab '"..name.."'"
    end)
end

topTabButtons[activeTop].BackgroundColor3 = Color3.fromRGB(80,10,10)
topTabButtons[activeTop].TextColor3 = ACCENT

-- Top Scroll Canvas
local function updateTopCanvas()
    RunService.Heartbeat:Wait()
    local width = 0
    for _,child in ipairs(topScroll:GetChildren()) do
        if child:IsA("GuiObject") and child ~= topList then
            width = width + child.AbsoluteSize.X + 8
        end
    end
    topScroll.CanvasSize = UDim2.new(0, math.max(width, topScroll.AbsoluteSize.X), 0, 0)
end

updateTopCanvas()
topScroll:GetPropertyChangedSignal("AbsoluteSize"):Connect(updateTopCanvas)

local function scrollTabs(offset)
    TweenService:Create(topScroll, TweenInfo.new(0.4,Enum.EasingStyle.Quad), {CanvasPosition = Vector2.new(offset,0)}):Play()
end

leftArrow.MouseButton1Click:Connect(function()
    scrollTabs(math.max(0, topScroll.CanvasPosition.X - (topScroll.AbsoluteWindowSize.X * 0.6)))
end)

rightArrow.MouseButton1Click:Connect(function()
    scrollTabs(topScroll.CanvasPosition.X + (topScroll.AbsoluteWindowSize.X * 0.6))
end)

-- Toggle
local uiVisible = true
UserInputService.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.Insert then
        uiVisible = not uiVisible
        main.Visible = uiVisible
    end
end)

-- Initial content
for i=1,12 do makeWIPButton("WIP!") end

print("[BMF Hub] Loaded successfully.")
errorLog.Text = "Status: Loaded BMF Hub (WIP)"
